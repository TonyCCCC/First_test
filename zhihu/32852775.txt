承接前文关于Python自动搜题的介绍
https://
zhuanlan.zhihu.com/p/32
828411
,此篇面向新手小白进行解析，助你成功运行自动搜题的python程序。
A部分是介绍思路，可以先跳到B部分去下载包，装中文包时耗时蛮长，可以再来细看A部分~
A 思路：如前文所述，代码大致分三步。
1. 获取手机直播答题界面截图
注意：我们这里只关注题目，不管选项，通过搜索题目内容获取辅助线索，所以截图我们只定位在显示题目的位置就足够了，这样图片中读取文字的速度快精度也高一些，例如中午1点直播答题测试时截图第六题：
2. 读取截图中的题目文字内容
这里我们在shell处将读取到的题目内容输出展示，同时也显示代码耗时：
3. 打开浏览器执行对题目搜索
单论每一步，实现方法有很多，但考虑到时间，我们只选取耗时尽量少的方法来实现各部分功能。经过1月11日中午1点百万英雄直播答题时的测试，网络良好时，搜完结果剩余答题时间仍有5秒，完全达到预期效果（但由于中午醉心于搜索、录影，忘了答题了，一心不可二用啊T.T）
B 下载相关功能包：由于我也算是刚入门的新手，基本各种功能模块都是按着搜来的网上教程来的，所以大家只要能保证各个模块都配好，最终程序跑通还是不难的。
执行代码时，我用的是Windows10系统电脑，Python3.6，安卓手机数据线连电脑。
1. 无论什么手机、电脑系统，要做的是实现把手机屏幕内容实时显示在电脑屏幕上，我是用的360手机助手的'演示'功能完成了对安卓和windows的连接，其余型号手机电脑可以自己搜一下来解决。
2. 接下来我们通过电脑截屏来实现截取屏幕上手机直播内容，由于Windows API获取截图的耗时极少，我们选择了它。由于Python没有自带访问windows系统API的库，需要下载pywin32库来实现，pip 安装的命令是： pip install pypiwin32(注意安装时是pypiwin32,不是pywin32)。这里关于windows通过python截屏函数，参考
Python实现屏幕截图的两种方式 - weiyinfu - 博客园
3. 拿到题目的截图后，要完成对题目中文字的读取，就需要安装PIL和pytesseract，同时还需要简体中文识别的引擎包tesseract-ocr，相关安装检测参考链接：
Python人工智能之图片识别，Python3一行代码实现图片文字识别 - 邱石的专栏 - CSDN博客
 注意：安装引擎包时最好按照链接中保存到C盘相似的路径，我和朋友安到E盘都有报错，也没搞清具体原因，把文件剪切到C盘就解决了。另外，请官方下载最新版或者通过我这网盘分享的4.0.0版本的，链接中的版本有点低，准确率也较差
https://
pan.baidu.com/s/1bpVvjU
B
4. 打开浏览器的时webbrowser模块，自带不用下载。
C 接下来是校准工作，调整代码中w,h值来改变截图大小，(20,140)处的两个值改变截图初始位置坐标，对应着你个人手机屏幕在电脑屏幕中的显示位置，调整以上的值使截图恰好落在手机屏上直播时显示题目的位置。
D 代码解析
def
 
window_capture
(
filename
):

    
hwnd
 
=
 
0

    
hwndDC
 
=
 
win32gui
.
GetWindowDC
(
hwnd
)

    
mfcDC
 
=
 
win32ui
.
CreateDCFromHandle
(
hwndDC
)

    
saveDC
 
=
 
mfcDC
.
CreateCompatibleDC
()

    
saveBitMap
 
=
 
win32ui
.
CreateBitmap
()

    
MoniterDev
 
=
 
win32api
.
EnumDisplayMonitors
(
None
,
None
)

    
#下面的#w=...和#h=...都是链接中源代码对其赋值，获取的是电脑截屏的宽和高

    
#w = MoniterDev[0][2][2]

    
#h = MoniterDev[0][2][3]

    
#我针对自己手机的屏幕大小以及显示题目的位置重新对其设置

    
w
 
=
 
380

    
h
 
=
 
150

    
saveBitMap
.
CreateCompatibleBitmap
(
mfcDC
,
w
,
h
)

    
saveDC
.
SelectObject
(
saveBitMap
)

    
#here的正下方（20，140）是截图的起点坐标来定位截图位置，这些根据个人情况调整

    
#--------------------------------here--------------------

    
saveDC
.
BitBlt
((
0
,
0
),(
w
,
h
),
mfcDC
,(
20
,
140
),
win32con
.
SRCCOPY
)

    
saveBitMap
.
SaveBitmapFile
(
saveDC
,
filename
)


#获取开始执行代码的时间


start
 
=
 
time
.
time
()


#获取截图为'haha.jpg'


window_capture
(
'haha.jpg'
)


#识别截图中的简体中文


text
=
pytesseract
.
image_to_string
(
Image
.
open
(
'haha.jpg'
),
lang
=
'chi_sim'
)


#识别的字符串是'你 好 吗'带空格的格式，这里去除这些空格生成新的字符串list即题目内容


new_text
 
=
''
.
join
(
text
.
split
())


print
(
new_text
)


#将题目内容作为搜索关键词加到百度搜索的网址


url
 
=
 
'http://www.baidu.com/s?wd=
%s
'
 
%
 
new_text


#打开浏览器获取搜索结果


webbrowser
.
open
(
url
)


#获取代码结束时的时间


end
 
=
 
time
.
time
()


#计算代码执行时间，搜索结果出现的时间还要取决于网络状况。。。


print
(
end
-
start
)


E 直播答题实测：
文中提到的第六题：
              
              
                
                
https://www.zhihu.com/video/934868742274408448
              
            
            
代码功能介绍：
              
              
                
                
https://www.zhihu.com/video/935150865682132992
              
            
            
成功的第一题：
              
              
                
                
https://www.zhihu.com/video/935149969132904448
              
            
            
忘记答题的第二题：
              
              
                
                
https://www.zhihu.com/video/935150275946283008
              
            
            
彻底GG的第三题：
              
              
                
                
https://www.zhihu.com/video/935151057739374592
              
            
            
希望当你看到这里时，能够成功运行代码咯~ 有问题可以留言，或者关注公众号TEDxPY留言，希望能认识更多喜欢Python的朋友~！
补充：
1.本代码只是简化百度搜索题目的过程，美其名自动搜题，只作答题参考，有优化的想法欢迎来建议。
2.代码运行后，文件夹中会生成截图图片，可以根据图片内容去调整代码中关于截图位置、大小的设置，百万英雄的题目是白底黑字，只要截图准确，一般精确度都很高的。
3.为了方便答题时运行代码，可以用python自带的IDLE打开py文件置于屏幕下方，出题目时在py文件上按F5运行即可跳出浏览器界面；同时提前打开好浏览器，调整好位置，避免答题时跳出的窗口挡住手机屏幕位置影响截图。
4.关于win32模块，谢谢评论提醒，并不是因为win10系统自带，而是我之前运行其它程序时预装过pypiwin32,所以如果找不到win32的模块，可以pip install pypiwin32
5.关于OCR版本，版本低的话可能准确度比较差，这里提供4.0.0版本的安装文件，别用链接里的版本了
https://
pan.baidu.com/s/1bpVvjU
B
 抱歉哈
原创代码
pengfexue2/TEDxPY
