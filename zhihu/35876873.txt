最近，朋友圈时不时会流行起某个测试类小游戏，比如你的性格图谱啦，你是三体中的哪个角色啦，你有什么超能力啦……昨天晚上在某个群里，又被一个测测你是什么书的小游戏刷屏了。
讲真，这个游戏还真不赖，制作得很精良，立意也不错：在即将到来的世界读书日，邀请你多读点书（当然是用他们的产品读啦）。
通过回答6道二选一的题目，会给你一个结论：你是一本什么书。于是在咱们这个爱读书爱学习的群里，自然都跃跃欲试。还有人不断尝试，想测出所有结果。
然而作为一只程序猿，看到大家这么热情地讨论，自然忍不住要手贱一把，一探究竟。😏
1. 潜入
因为这种推广类小游戏的开发周期短，又要考虑被封禁的可能，所以通常都直接使用 HTML5 的网页开发，且没有微信登录验证，计算逻辑完全通过前端实现。而前端代码是很难加密的，这就给我们留下了探索的空间。
扫描结果中的二维码，选择“
复制链接
”，得到游戏的 
URL 地址
。
在 
Chrome 浏览器
中打开链接，提示要将手机竖屏。
没关系，我们右键点击页面，选择“
审查元素
”，或从菜单栏里找到“
开发者工具
”，打开 
Chrome 开发者工具
，点击手机样的图标，就可以进入
手机模拟模式
。
现在就可以在电脑上来做这个测试了。
2. 探索与发现
首先选择开发者工具 
Console（控制台）
标签页，看看在游戏中会有什么信息。
的确会有些输出，但除了知道这是用 Cocos2d-JS v3.14 开发的之外，也并不什么更有价值的。
那就再看看 
Network（网络）
标签页。
当游戏结束，显示最终结果之后，一个图片请求成功引起了我的注意：
点击预览一下，正是游戏给我们的结果图片，只是上面没有我们的名字。
哈哈，还记得我上一次“
每周一坑
”栏目推送了什么来着？
【每周一坑】用代码给图片配上文字
当时还有同学留言说这功能有什么用。喏，这就是应用场景，我们输入的名字就是通过与这张图片合成后，显示出的结果。
这张图片的名字叫做 
estp.jpg
，可以拿到它的 
URL 地址
。我们就从它入手，寻找更多的线索。
3. 顺藤摸瓜
这里，就可以用到我在
爬虫课程
里经常提到的一个方法：如何从网页上的众多请求中搜索关键字。
在 Network 标签页的请求列表上右键单击，选择“
Save as HAR with content
”。这样就得到一个包含所有请求和返回值详细信息的 .har 文本文件。
找一个功能强大的编辑器打开这个文件。（比如 SublimeText、Notepad++，默认的记事本就算了……）
搜索上一步得到的关键字：
estp
很幸运，游戏的开发者没有给我们设置很大的障碍，比较轻松地就找到了一些有意思的信息：
从这个信息往上翻一翻，就可以找到对应的请求来源：
这个 loader.js 看来就是揭开答案的关键。打开地址，再搜一下 
estp
：
即使你不懂 JS 代码，也能从这里猜出个大概了吧。
4. 剧透，慎入
e和i、n和s、f和t、j和p，分别对应了4组不同的选择。而下半部分代码，就是把你的名字绘制到图片上。
于是，把它这里的另外15组字符替换到我们前面的拿到的结果图片地址中，你就会看到其他15个答案。
等等！6组二选一，不是应该有2的6次方，64组结果吗？怎么只有16个！难道说……
没错，稍微验证下就会发现，最后两题的答案根本不影响结果！
到这里，我的工作就算完成了。不过呢，我这么懒，显然不会去一张张下载图片啊。借用对方代码里的 ys 字典，随手写个批量下载的 python 脚本：
ys
 
=
 
{

    
'enfj'
:
 
360
,

    
'enfp'
:
 
428
,

    
'entj'
:
 
428
,

    
'entp'
:
 
428
,

    
'esfj'
:
 
428
,

    
'esfp'
:
 
428
,

    
'estj'
:
 
428
,

    
'estp'
:
 
428
,

    
'infj'
:
 
428
,

    
'infp'
:
 
360
,

    
'intj'
:
 
428
,

    
'intp'
:
 
428
,

    
'isfj'
:
 
428
,

    
'isfp'
:
 
360
,

    
'istj'
:
 
428
,

    
'istp'
:
 
360


}


import
 
requests
 
as
 
r


for
 
k
 
in
 
ys
:

    
u
 
=
 
'https://cdn.tiaotiaotang.net/library/f_test_5/res/result/
%s
.jpg'
 
%
 
k

    
d
 
=
 
r
.
get
(
u
)

    
with
 
open
(
k
 
+
 
'.jpg'
,
 
'wb'
)
 
as
 
f
:

        
f
.
write
(
d
.
content
)


瞬间搞定：
最后的结果，16本书：
1.《罗生门》
2.《降临》
3.《门口的野蛮人》
4.《十一字杀人》
5.《爱的教育》
6.《向上汇报》
7.《自控力》
8.《且以优雅过一生 杨绛传》
9.《悟空传》
10.《查令十字街84号》
11.《中国通史》
12.《批判性思维工具》
13.《小王子》
14.《我们都是孤独的行路人》
15.《无声告白》
16.《天生变态狂》
想到群里的有朋友花了1个小时去试所有的选项，我默默心疼1秒……
不过最后给个友情提醒：作为一个无趣的程序猿，还是低调一点好，不然会没朋友的。
┑(￣Д ￣)┍
════
其他文章及回答：
如何自学Python
 | 
新手引导
 | 
精选
Python
问答
